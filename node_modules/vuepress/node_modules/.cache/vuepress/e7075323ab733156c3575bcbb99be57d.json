{"remainingRequest":"/Users/Dottedsocks/Projects/thelmaRun2/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/Dottedsocks/Projects/thelmaRun2/node_modules/vuepress/lib/app/clientEntry.js","dependencies":[{"path":"/Users/Dottedsocks/Projects/thelmaRun2/node_modules/vuepress/lib/app/clientEntry.js","mtime":1555354325000},{"path":"/Users/Dottedsocks/Projects/thelmaRun2/node_modules/cache-loader/dist/cjs.js","mtime":1555354326000},{"path":"/Users/Dottedsocks/Projects/thelmaRun2/node_modules/babel-loader/lib/index.js","mtime":1555354325000}],"contextDependencies":[],"result":["'use strict';\n\nrequire('@temp/polyfill');\n\nvar _app = require('./app');\n\nvar _registerServiceWorker = require('register-service-worker');\n\nvar _createApp = (0, _app.createApp)(),\n    app = _createApp.app,\n    router = _createApp.router;\n\n// Google analytics integration\n/* global BASE_URL, GA_ID, ga, SW_ENABLED */\n\nif (process.env.NODE_ENV === 'production' && GA_ID) {\n  (function (i, s, o, g, r, a, m) {\n    i['GoogleAnalyticsObject'] = r;\n    i[r] = i[r] || function () {\n      (i[r].q = i[r].q || []).push(arguments);\n    };\n    i[r].l = 1 * new Date();\n    a = s.createElement(o);\n    m = s.getElementsByTagName(o)[0];\n    a.async = 1;\n    a.src = g;\n    m.parentNode.insertBefore(a, m);\n  })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');\n\n  ga('create', GA_ID, 'auto');\n  ga('send', 'pageview');\n\n  router.afterEach(function (to) {\n    ga('set', 'page', to.fullPath);\n    ga('send', 'pageview');\n  });\n}\n\nrouter.onReady(function () {\n  app.$mount('#app');\n\n  // Register service worker\n  if (process.env.NODE_ENV === 'production' && SW_ENABLED && window.location.protocol === 'https:') {\n    (0, _registerServiceWorker.register)(BASE_URL + 'service-worker.js', {\n      ready: function ready() {\n        console.log('[vuepress:sw] Service worker is active.');\n        app.$refs.layout.$emit('sw-ready');\n      },\n      cached: function cached() {\n        console.log('[vuepress:sw] Content has been cached for offline use.');\n        app.$refs.layout.$emit('sw-cached');\n      },\n      updated: function updated() {\n        console.log('[vuepress:sw] Content updated.');\n        app.$refs.layout.$emit('sw-updated');\n      },\n      offline: function offline() {\n        console.log('[vuepress:sw] No internet connection found. App is running in offline mode.');\n        app.$refs.layout.$emit('sw-offline');\n      },\n      error: function error(err) {\n        console.error('[vuepress:sw] Error during service worker registration:', err);\n        app.$refs.layout.$emit('sw-error', err);\n        if (GA_ID) {\n          ga('send', 'exception', {\n            exDescription: err.message,\n            exFatal: false\n          });\n        }\n      }\n    });\n  }\n});",null]}